services:
  tms-board-db:
    image: postgres:16-alpine
    container_name: tms-board-db
    environment:
      POSTGRES_DB: "tms_board"
      POSTGRES_USER: "tms_board"
      POSTGRES_PASSWORD: "tms_board"
      tms_Database__Host: "tms-board-db"
      tms_Database__Port: "5432"
      tms_Database__User: "tms_board"
      tms_Database__Password: "tms_board"
      tms_Database__Database: "tms_board"
    volumes:
      - tms_task_pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 5s
      timeout: 3s
      retries: 10
    networks:
      - tms-board-net

  tms-task:
    build:
      context: .
      dockerfile: ./Dockerfile
    image: tms-taskboardservice:latest
    environment:
      ASPNETCORE_ENVIRONMENT: "Development"
      ASPNETCORE_URLS: "http://0.0.0.0:8080"
      ASPNETCORE_Kestrel__EndpointDefaults__Protocols: "Http2"

      RabbitMq__Host: "tms-rabbit"

      Database__Host: "tms-board-db"
      Database__Port: "5432"
      Database__User: "tms_board"
      Database__Password: "tms_board"
      Database__Database: "tms_board"
    ports:
      - "50052:8080"
    depends_on:
      tms-board-db:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - tms-board-net
      - tms

networks:
  tms-board-net: {}
  tms:
    external: true

volumes:
  tms_task_pgdata: {}
